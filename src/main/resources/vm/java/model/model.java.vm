package ${packageName}.model;

#foreach ($import in $importList)
import ${import};
#end
/**
 * ${functionName}对象 ${tableName}
 *
 * @author ${author}
 * @date ${datetime}
 */
public class ${ClassName}Model {

    private Long id;

#foreach ($column in $columns)
    /**
     * $column.comment
     */
  #foreach($valid in $column.valids)
  @${valid.type}(message = "${valid.failMessage}")
  #end
  private ${column.javaType} ${column.name};

#end

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

#foreach($column in $columns)
#if($column.name.length() > 2 && $column.name.substring(1,2).matches("[A-Z]"))
  #set($upName=$column.name)
#else
  #set($upName=$column.name.substring(0,1).toUpperCase() + ${column.name.substring(1)})
#end
    public $column.javaType get${upName}() {
        return $column.name;
    }

    public void set${upName}(${column.javaType} $column.name) {
        this.$column.name = $column.name;
    }

#end
    @Override
    public String toString() {
        StringBuilder string = new StringBuilder("${ClassName}Model [");
      #foreach($column in $columns)
        string.append("${column.name}:").append(this.${column.name}).append(',');
      #end
        string.setCharAt(string.length() - 1, ']');
        return string.toString();
    }

}
