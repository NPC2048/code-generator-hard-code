var ${functionName}_add_pager = {
  options: {}, //参数options
  \$table: \$('#table'), //boostrap table
  \$dialog: \$('#addDialog'),
  \$addForm: \$('#addForm'), // add form
  toolbar: {
    \$saveBtn: \$('#addDialog .saveBtn'),
    \$resetBtn: \$('#addDialog .resetBtn'),
    \$closeBtn: \$('#addDialog .closeBtn')
  },
  init: function (options) {
    //初始化参数
    this.options = \$.extend(this.options, options || {});
    //初始化表单控件
    this.initForm();
    //初始化数据表单校验
    this.initFormValidate();
    //初始化保存按钮点击事件
    this.initSaveBtnClick();
    //初始化重置数据表单点击事件
    this.initResetBtnClick();
    //初始化关闭数据表单点击事件
    this.initCloseBtnClick();

  },
  initForm: function () {
    var that = this;
    //异步加载时,selectpicker需要手动调用初始化
    this.\$addForm.find('.selectpicker').selectpicker();
    //为每个selectpicker绑定当值改变时自动校验事件
    this.\$addForm.find('.selectpicker').on('changed.bs.select', function (e) {
    that.\$addForm.validate().element(\$(this));
    });
  },
  initFormValidate: function () {
    var that = this;
    this.\$addForm.validate({
      rules: {
        #foreach($column in $columns)
          #if($column.valid)
            $column.name:{
              #foreach($type in $column.valid.types)
                $type.name: $type.value
              #end
            },
          #end
        #end
      },
      messages: {
        #foreach($column in $columns)
          #if($column.valid)
            $column.name:{
              #foreach($type in $column.valid.types)
                $type.name: $type.message
              #end
            }
          #end
        #end
      },
      errorElement: 'div',
      errorPlacement: function (error, element) {
        error.addClass('help-block');
        element.parent().addClass('has-feedback');

        if (element.prop('type') === 'checkbox') {
          error.insertAfter(element.parent('label'));
        } else if (element.is('select')) {
          error.css('color', '#a94442');
          error.insertAfter(element.parent());
        } else {
          error.insertAfter(element);
        }
        if (!element.next("span")[0]) {
          \$("<span class='glyphicon glyphicon-remove form-control-feedback'></span>").insertAfter(element);
        }
      },
      success: function (label, element) {
        if (!\$(element).next("span")[0]) {
            \$("<span class='glyphicon glyphicon-ok form-control-feedback'></span>").insertAfter(\$(element));
        }
      },
      highlight: function (element, errorClass, validClass) {
        \$(element).parent().addClass('has-error').removeClass('has-success');
        \$(element).next('span').addClass('glyphicon-remove').removeClass('glyphicon-ok');
      },
      unhighlight: function (element, errorClass, validClass) {
        \$(element).parent().addClass('has-success').removeClass('has-error');
        \$(element).next('span').addClass('glyphicon-ok').removeClass('glyphicon-remove');
      },
      submitHandler: function () {
        \$.addLoading();
        \$.post(ctx + '/serverConfig/add', \$.serializeObject(that.\$addForm), function (r) {
          \$.removeLoading();
          if (r && r.success) {
          messager.notify({
            text: r.msg
          });
          //将新增记录插入至表格第一行
          that.\$table.bootstrapTable('insertRow', {
            index: 0,
            row: r.obj
          });
          //隐藏对话框
          that.\$dialog.modal('hide');
          that.\$table.bootstrapTable('refresh');
          } else {
            messager.alert({
              text: r.msg,
              callback: function () {
              //隐藏对话框
              //that.\$dialog.modal('hide');
              }
            });
          }
        }, 'json');
      }
    });
  },
  initSaveBtnClick: function () {
    var that = this;
    this.toolbar.\$saveBtn.click(function () {
      that.\$addForm.submit();
    });
  },
  initResetBtnClick: function () {
    var that = this;
    this.toolbar.\$resetBtn.click(function () {
      that.resetForm(that);
    });
  },
  initCloseBtnClick: function () {
    var that = this;
    this.toolbar.\$closeBtn.click(function () {
      that.resetForm(that);
    });
  },
  resetForm: function (that) {
    that.\$addForm.resetForm();
    that.\$addForm.find('.has-feedback').removeClass('has-success has-error has-feedback');
    that.\$addForm.find('.help-block').remove();
    that.\$addForm.find('.form-control-feedback').remove();
    that.\$addForm.find('.selectpicker').selectpicker('render');

  }
};
// 自定義驗證










